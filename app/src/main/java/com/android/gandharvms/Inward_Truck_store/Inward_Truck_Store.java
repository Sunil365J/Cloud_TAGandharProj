package com.android.gandharvms.Inward_Truck_store;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.AppCompatSpinner;

import android.app.DatePickerDialog;
import android.app.TimePickerDialog;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TimePicker;
import android.widget.Toast;

import com.android.gandharvms.FcmNotificationsSender;
import com.android.gandharvms.Inward_Truck;
import com.android.gandharvms.R;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.messaging.FirebaseMessaging;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;

public class Inward_Truck_Store extends AppCompatActivity {

    //prince
    private SharedPreferences sharedPreferences;
    private int autoGeneratedNumber;
    private final int MAX_LENGTH=10;

    String [] items = {"Ton","Litre","KL","Kgs","pcs"};
    AutoCompleteTextView autoCompleteTextView;
    ArrayAdapter<String> adapterItems;
    EditText etintime,etserialnumber,etvehicalnum,etpo,etdate,etmaterialrdate,etmaterial,etqty,etoum,etremark;
    Button trssubmit,buttonadd,button1;
    Button view;
    DatePickerDialog picker;

    FirebaseFirestore trsdbroot;
    TimePickerDialog intruckspicker;
    LinearLayout linearLayout;
    List<String> teamList = new ArrayList<>();
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_inward_truck_store);

        //Send Notification to all
        //Send Notification to all
        FirebaseMessaging.getInstance().subscribeToTopic("cZO18soMQ7K8D3CkVdUA9i:APA91bFdQxHnryIGp1ZSaMMZggvyev0DbgwMqvuHOPzdi_CnUGJeGds6aIK9_2cZdb6e246Ju5a6erKkwkWHQmUKeYTYm_tO2NEsM-GiPsWlqFQK3E--ArUx99-UwGtsnZHgm7_jAFSs");

        //prince
        //Send Notifications To All
        sharedPreferences = getSharedPreferences("TruckStore", MODE_PRIVATE);


        //for uom
        autoCompleteTextView =findViewById(R.id.etsuom);
        adapterItems = new ArrayAdapter<String>(this,R.layout.list_itemuom,items);
        autoCompleteTextView.setAdapter(adapterItems);
        autoCompleteTextView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                String items = parent.getItemAtPosition(position).toString();
                Toast.makeText(getApplicationContext(), "Item: "+items, Toast.LENGTH_SHORT).show();
            }
        });


        etintime =(EditText) findViewById(R.id.etintime);
        etserialnumber=(EditText) findViewById(R.id.ettrsserialnumber);
        etvehicalnum = (EditText) findViewById(R.id.ettrsvehical);
        etpo=(EditText) findViewById(R.id.ettrsinvoice);
        etdate=(EditText) findViewById(R.id.ettrdate);
        etmaterialrdate=(EditText) findViewById(R.id.materialrecievingdate);
        etmaterial=(EditText) findViewById(R.id.ettsmaterial);
        etqty=(EditText) findViewById(R.id.etsqty);
        etoum=(EditText) findViewById(R.id.etsuom);
        etremark=(EditText) findViewById(R.id.etremark);



        linearLayout= findViewById(R.id.layout_list);
        button1=findViewById(R.id.button_add);
        button1.setOnClickListener(this::onClick);

        teamList.add("Ton");
        teamList.add("Litre");
        teamList.add("KL");
        teamList.add("Kgs");
        teamList.add("Pcs");



                                          //listdata
        view= findViewById(R.id.viewclick);
        view.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(Inward_Truck_Store.this, Inward_Truck_Store_viewdata.class));
            }
        });




        //intime

        etintime.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Calendar calendar = Calendar.getInstance();
                int hours = calendar.get(Calendar.HOUR_OF_DAY);
                int mins = calendar.get(Calendar.MINUTE);


                intruckspicker = new TimePickerDialog(Inward_Truck_Store.this, new TimePickerDialog.OnTimeSetListener() {
                    @Override
                    public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
                        Calendar c = Calendar.getInstance();
                        c.set(Calendar.HOUR_OF_DAY,hourOfDay);
                        c.set(Calendar.MINUTE,minute);
                        etintime.setText(hourOfDay +":"+ minute );
                    }
                },hours,mins,false);
                intruckspicker.show();
            }
        });

        etintime.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Calendar calendar = Calendar.getInstance();
                int hours = calendar.get(Calendar.HOUR_OF_DAY);
                int mins = calendar.get(Calendar.MINUTE);


                intruckspicker = new TimePickerDialog(Inward_Truck_Store.this, new TimePickerDialog.OnTimeSetListener() {
                    @Override
                    public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
                        Calendar c = Calendar.getInstance();
                        c.set(Calendar.HOUR_OF_DAY,hourOfDay);
                        c.set(Calendar.MINUTE,minute);
                        etintime.setText(hourOfDay +":"+ minute );
                    }
                },hours,mins,false);
                intruckspicker.show();
            }
        });


        //date
        etdate.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                final Calendar calendar = Calendar.getInstance();
                int day = calendar.get(Calendar.DAY_OF_MONTH);
                int month = calendar.get(Calendar.MONTH);
                int year = calendar.get(Calendar.YEAR);
                // Array of month abbreviations
                String[] monthAbbreviations = new String[]{"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"};
                picker = new DatePickerDialog(Inward_Truck_Store.this, new DatePickerDialog.OnDateSetListener() {
                    @Override
                    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {
                        // Use the month abbreviation from the array
                        String monthAbbreviation = monthAbbreviations[month];
                        etdate.setText(dayOfMonth + "/" + monthAbbreviation + "/" + year);
                    }
                }, year, month, day);
                picker.show();
            }
        });

        etmaterialrdate.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                final Calendar calendar = Calendar.getInstance();
                int day = calendar.get(Calendar.DAY_OF_MONTH);
                int month = calendar.get(Calendar.MONTH);
                int year = calendar.get(Calendar.YEAR);

                picker = new DatePickerDialog(Inward_Truck_Store.this, new DatePickerDialog.OnDateSetListener() {
                    @Override
                    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {
                        etmaterialrdate.setText(dayOfMonth + "/" + (month + 1) + "/" + year);
                    }
                },year,month,day);
                picker.show();
            }
        });
        etvehicalnum.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
            }
            @Override
            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
            }
            @Override
            public void afterTextChanged(Editable editable) {
                if (editable.length() > MAX_LENGTH) {
                    etvehicalnum.removeTextChangedListener(this);
                    String trimmedText = editable.toString().substring(0, MAX_LENGTH);
                    etvehicalnum.setText(trimmedText);
                    etvehicalnum.setSelection(MAX_LENGTH); // Move cursor to the end
                    etvehicalnum.addTextChangedListener(this);
                }else if (editable.length() < MAX_LENGTH) {
                    // Show an error message for less than 10 digits
                    etvehicalnum.setError("Invalid format. Enter 10 Character. \n Vehicle No Format - ST00AA9999 OR YYBR9999AA");
                } else {
                    // Clear any previous error message when valid
                    etvehicalnum.setError(null);
                }
            }
        });

        trssubmit=(Button)findViewById(R.id.submit);
        trsdbroot=FirebaseFirestore.getInstance();

        //prince

        trssubmit.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                trsinsert();
            }
        });

        // AUTO GENRATED SERIAL NUMBER
        int lastDay = sharedPreferences.getInt("lastDay", -1);
        int currentDay = Integer.parseInt(getDay());
        if (currentDay != lastDay) {
            // Day has changed, reset auto-generated number to 1
            sharedPreferences.edit().putInt("autoGeneratedNumber", 1).apply();
            sharedPreferences.edit().putInt("lastDay", currentDay).apply();
        }

        if (sharedPreferences != null) {
            autoGeneratedNumber = sharedPreferences.getInt("autoGeneratedNumber", 1);
            String autoGeneratedNumberString = String.format("%03d", autoGeneratedNumber);
            // Create the serial number
            String serialNumber = "S" + GetYear() + getMonth() + getDay() + autoGeneratedNumberString;
            // Set the serial number in the EditText
            etserialnumber.setText(serialNumber);
            // Increment and store the auto-generated number for the next vehicle
        } else {
            // Handle the case where sharedPreferences is null
            // This might involve displaying an error message or taking appropriate action
            Log.e("MainActivity", "SharedPreferences is null");
        }


    }

                                    //prince

    private String GetYear() {
        SimpleDateFormat yearFormat = new SimpleDateFormat("yy", Locale.getDefault());
        return yearToLetter(yearFormat.format(new Date()));
    }

    private String getMonth() {
        SimpleDateFormat monthFormat = new SimpleDateFormat("MM", Locale.getDefault());
        return monthToLetter(monthFormat.format(new Date()));
    }

    private String getDay() {
        SimpleDateFormat dayFormat = new SimpleDateFormat("dd", Locale.getDefault());
        return dayFormat.format(new Date());
    }
    private String monthToLetter(String month) {
        switch (month) {
            case "01":
                return "A";
            case "02":
                return "B";
            case "03":
                return "C";
            case "04":
                return "D";
            case "05":
                return "E";
            case "06":
                return "F";
            case "07":
                return "G";
            case "08":
                return "H";
            case "09":
                return "I";
            case "10":
                return "J";
            case "11":
                return "K";
            case "12":
                return "L";
            default:
                return null; // Default to January (A) if month is not recognized
        }
    }
    private String yearToLetter(String month) {
        switch (month) {
            case "23":
                return "A";
            case "24":
                return "B";
            case "25":
                return "C";
            case "26":
                return "D";
            case "28":
                return "E";
            case "29":
                return "F";
            case "30":
                return "G";
            case "31":
                return "H";
            case "32":
                return "I";
            case "33":
                return "J";
            case "34":
                return "K";
            case "35":
                return "L";
            case "36":
                return "M";
            case "37":
                return "N";
            case "38":
                return "O";
            case "39":
                return "P";
            case "40":
                return "Q";
            case "41":
                return "R";
            case "42":
                return "S";
            case "43":
                return "T";
            case "44":
                return "U";
            case "45":
                return "V";
            case "46":
                return "W";
            case "47":
                return "X";
            case "48":
                return "Y";
            case "49":
                return "Z";
            default:
                return null;
            // Default to Null if month is not recognized
        }
    }
    public void makeNotification(String vehicleNo,String outTime){
        FcmNotificationsSender notificationsSender = new FcmNotificationsSender("cZO18soMQ7K8D3CkVdUA9i:APA91bFdQxHnryIGp1ZSaMMZggvyev0DbgwMqvuHOPzdi_CnUGJeGds6aIK9_2cZdb6e246Ju5a6erKkwkWHQmUKeYTYm_tO2NEsM-GiPsWlqFQK3E--ArUx99-UwGtsnZHgm7_jAFSs",
                "Inward Truck Store Process Done..!",
                "Vehicle Number:-" + vehicleNo + " has Completed Store Process at " + outTime,
                getApplicationContext(), Inward_Truck_Store.this);
        notificationsSender.SendNotifications();
    }
    private String getCurrentTime() {
        // Get the current time
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm", Locale.getDefault());
        return sdf.format(new Date());
    }

    public void trsinsert()
    {
        String intime = etintime.getText().toString().trim();
        String serialnumber = etserialnumber.getText().toString().trim();
        String vehicalnumber = etvehicalnum.getText().toString().trim();
        String invoicenum = etpo.getText().toString().trim();
        String date = etdate.getText().toString().trim();
        String supplier=etmaterialrdate.getText().toString().trim();
        String material = etmaterial.getText().toString().trim();
        String qty = etqty.getText().toString().trim();
        String oum = etoum.getText().toString().trim();
        String remark = etremark.getText().toString().trim();
        String outTime = getCurrentTime();

        if (intime.isEmpty()|| serialnumber.isEmpty()|| vehicalnumber.isEmpty()|| invoicenum.isEmpty()|| date.isEmpty()|| supplier.isEmpty()||
        material.isEmpty()|| qty.isEmpty()|| oum.isEmpty() || remark.isEmpty()){
            Toast.makeText(this, "All fields must be filled", Toast.LENGTH_SHORT).show();
        }
        else {

            Map<String,String>trsitens = new HashMap<>();
            trsitens.put("In_Time",etintime.getText().toString().trim());
            trsitens.put("Serial_Number",etserialnumber.getText().toString().trim());
            trsitens.put("Vehicle_Number",etvehicalnum.getText().toString().trim());
            trsitens.put("PO_No",etpo.getText().toString().trim());
            trsitens.put("Po_Date",etdate.getText().toString().trim());
            trsitens.put("Material_Rec_Date",etmaterialrdate.getText().toString().trim());
            trsitens.put("Material",etmaterial.getText().toString().trim());
            trsitens.put("Qty",etqty.getText().toString().trim());
            trsitens.put("Oum",etoum.getText().toString().trim());
            trsitens.put("Remarks",etremark.getText().toString().trim());
            trsitens.put("outTime",outTime.toString());


            makeNotification(etvehicalnum.getText().toString(),outTime.toString());
            trsdbroot.collection("Inward Truck Store").add(trsitens)
                    .addOnCompleteListener(new OnCompleteListener<DocumentReference>() {
                        @Override
                        public void onComplete(@NonNull Task<DocumentReference> task) {


                           etintime.setText("");
                           etserialnumber.setText("");
                           etvehicalnum.setText("");
                           etpo.setText("");
                           etdate.setText("");
                           etmaterialrdate.setText("");
                           etmaterial.setText("");
                           etqty.setText("");
                           etoum.setText("");

                            Toast.makeText(Inward_Truck_Store.this, "Data Inserted Successfully", Toast.LENGTH_SHORT).show();

                        }
                    });
            Intent intent= new Intent(this, Inward_Truck.class);
            startActivity(intent);

            // Auto Genrated serial number
            sharedPreferences.edit().putInt("autoGeneratedNumber", autoGeneratedNumber + 1).apply();
        }
    }


    public void onClick(View view){

        addview();
    }

    private void addview(){

        View materialview = getLayoutInflater().inflate(R.layout.row_add_store,null,false);

        EditText editText = (EditText) materialview.findViewById(R.id.editmaterial);
        EditText editqty = (EditText) materialview.findViewById(R.id.editqty);
        AppCompatSpinner spinner =  (AppCompatSpinner) materialview.findViewById(R.id.spinner_team);
        ImageView img = (ImageView) materialview.findViewById(R.id.editcancel);

        linearLayout.addView(materialview);

        ArrayAdapter arrayAdapter = new ArrayAdapter(this, androidx.appcompat.R.layout.support_simple_spinner_dropdown_item,teamList);
        spinner.setAdapter(arrayAdapter);

        img.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                removeView(materialview);
            }
        });

    }
    private void removeView(View view){

        linearLayout.removeView(view);
    }

}